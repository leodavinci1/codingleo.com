/* eslint-disable react/jsx-props-no-spreading */
/* eslint-disable no-unused-vars */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Computer.glb 
*/

import React, { useRef } from 'react';
import { Html, Image, Text, useGLTF } from '@react-three/drei';
import { useDispatch } from 'react-redux';

import { ThemeProvider } from 'styled-components';
import { Creators as nodeCreators } from '../../../store/ducks/node';
import Editor from '../../Editor';
import Terminal from '../../Terminal';

import getGridClass from '../../../hooks/getGridClass';
import { COLORS } from '../../../constants/colors';

export function Computer(props) {
  const { size } = getGridClass();
  const dispatch = useDispatch();
  const theme = { colors: { ...COLORS }, size };
  const { nodes, materials } = useGLTF('./models/Computer.glb');

  const onOpenVSCode = () => {
    console.log('opened VS Code');
    dispatch(nodeCreators.setCodeOpened(true));
  };
  const onOpenVSTerminal = () => {
    dispatch(nodeCreators.setLine(0));
    console.log('opened Terminal');
  };

  const pointerIn = (evt) => {
    dispatch(nodeCreators.setCursorText('OPEN'));
    document.body.style.cursor = 'none';
    console.log(evt.object.name);
  };
  const pointerOut = (evt) => {
    dispatch(nodeCreators.setCursorText(''));
    document.body.style.cursor = 'auto';
  };

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Comp_Mouse.geometry}
        material={materials.lambert3SG}
      />
      <Text
        font='./menlo.ttf'
        color='#000000'
        scale={15}
        rotation={[0, 0, 0]}
        position={[0, 240, 0.5]}
      >
        (open both programs to start)
      </Text>
      <Image
        onPointerOver={pointerIn}
        onPointerOut={pointerOut}
        onClick={onOpenVSCode}
        position={[-50, 160, 1]}
        scale={80}
        url='/VSCODE.png'
      />
      <Image
        onPointerOver={pointerIn}
        onPointerOut={pointerOut}
        onClick={onOpenVSTerminal}
        position={[50, 160, 1]}
        scale={80}
        url='/Terminal.png'
      />
      <mesh geometry={nodes.Monitor.geometry} material={materials.lambert3SG} />
      <mesh geometry={nodes.Drive.geometry} material={materials.lambert3SG} />
      <mesh
        geometry={nodes.Keyboard1.geometry}
        material={materials.lambert3SG}
      />
      <mesh
        geometry={nodes.System_unit_1.geometry}
        material={materials.lambert3SG}
      />
      <mesh
        geometry={nodes.System_unit_1_1.geometry}
        material={materials.initialShadingGroup}
      />
    </group>
  );
}

useGLTF.preload('./models/Computer.glb');
