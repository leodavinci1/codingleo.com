{"version":3,"sources":["store/sagas/index.js","reducers/main.js","store/index.js","hooks/getGridClass.js","routes/app.js","templates/DefaultLayout/styles.js","templates/DefaultLayout/index.js","App.js","store/localStorage.js","index.js","constants/colors.js","store/ducks/locale.js","store/ducks/node.js"],"names":["sagas","all","createRootReducer","history","combineReducers","locale","node","router","connectRouter","createBrowserHistory","getScreenSize","width","window","innerWidth","size","routes","path","name","component","lazily","Home","GlobalStyles","createGlobalStyle","theme","colors","background","textColor","Container","styled","div","Layout","props","useState","windowDimensions","setScreenSize","useEffect","handleResize","addEventListener","removeEventListener","getGridClass","COLORS","Toast","toasty","fallback","map","route","exact","render","from","to","defaultProps","push","store","preloadedState","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","routerMiddleware","createStore","subscribe","throttle","runSaga","run","configureStore","serializedState","localStorage","getItem","parsedState","JSON","parse","Date","now","time","value","err","loadState","App","DefaultLayout","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","StrictMode","document","getElementById","controls","close","minimize","expand","text","purple","red","green","yellow","blue","terminal","header","body","bodyColorText","headerColorText","editor","lineBackground","lineNumber","active","neutral","createActions","toggleLocale","Types","Creators","TOGGLE_LOCALE","state","createReducer","setLine","SET_LINE","data","line"],"mappings":"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","file":"static/js/main.718e706e.chunk.js","sourcesContent":["import { all } from 'redux-saga/effects';\r\n// import sagaLoader from './sagaLoader';\r\n\r\nexport default function* sagas() {\r\n  yield all([]);\r\n}\r\n","/* eslint-disable import/no-extraneous-dependencies */\r\n// reducers.js\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport locale from '../store/ducks/locale';\r\nimport node from '../store/ducks/node';\r\n\r\nconst createRootReducer = (history) =>\r\n  combineReducers({\r\n    locale,\r\n    node,\r\n    router: connectRouter(history),\r\n  });\r\nexport default createRootReducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/prop-types */\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport 'regenerator-runtime/runtime';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport throttle from 'lodash.throttle';\r\nimport sagas from './sagas';\r\n// import { saveState } from './localStorage';\r\nimport createRootReducer from '../reducers/main';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  let composeEnhancers = null;\r\n\r\n  if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    composeEnhancers = compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        sagaMiddleware\r\n      ),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : {}\r\n    );\r\n  } else {\r\n    composeEnhancers = compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        sagaMiddleware\r\n      )\r\n    );\r\n  }\r\n\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState || {},\r\n    composeEnhancers\r\n  );\r\n\r\n  store.subscribe(\r\n    throttle(() => {\r\n      // saveState({\r\n      //   locale: store.getState().locale ? store.getState().locale : {},\r\n      //   node: store.getState().node ? store.getState().node : {},\r\n      // });\r\n    }, 1000)\r\n  );\r\n\r\n  store.runSaga = sagaMiddleware.run;\r\n  store.runSaga(sagas);\r\n\r\n  return store;\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n/*\r\nTamanhos de tela\r\nextra small < 768px\r\nsmall >= 768px\r\nmedium >= 992px\r\nlarge >= 1200px\r\n*/\r\n\r\nconst getScreenSize = () => {\r\n  const { innerWidth: width } = window;\r\n\r\n  if (width >= 1200) {\r\n    return { size: 'lg' };\r\n  }\r\n\r\n  if (width >= 992) {\r\n    return { size: 'md' };\r\n  }\r\n\r\n  if (width >= 768) {\r\n    return { size: 'sm' };\r\n  }\r\n\r\n  return { size: 'xs' };\r\n};\r\n\r\nexport default function getGridClass() {\r\n  const [windowDimensions, setScreenSize] = useState(getScreenSize());\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setScreenSize(getScreenSize());\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import { lazily } from 'react-lazily';\r\n\r\nconst { Home } = lazily(() => import('../pages'));\r\n\r\nconst routes = [{ path: '/', name: 'Home', component: Home }];\r\n\r\nexport default routes;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n// import ConsolasWoff2 from '../../assets/fonts/consolas.woff2';\r\n// import MenloWoff2 from '../../assets/fonts/menlo.woff2';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n   \r\n    body {\r\n      background-color:  ${({ theme: { colors } }) => colors.background};\r\n      color: ${({ theme: { colors } }) => colors.textColor};\r\n    }\r\n`;\r\n\r\nexport const Container = styled.div``;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport React, { Suspense } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { COLORS } from '../../constants/colors';\r\nimport getGridClass from '../../hooks/getGridClass';\r\nimport routes from '../../routes/app';\r\nimport { GlobalStyles, Container } from './styles';\r\nimport './fonts.css';\r\n\r\nconst Layout = (props) => {\r\n  // Tema Global\r\n  const { size } = getGridClass();\r\n  const theme = { colors: { ...COLORS }, size };\r\n\r\n  // Loader para lazy load dos components\r\n  const loading = () => <div />;\r\n\r\n  const { toasty: Toast } = props;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Toast />\r\n      <GlobalStyles />\r\n      <Suspense fallback={loading()}>\r\n        <Container>\r\n          <Switch>\r\n            {routes.map((route) =>\r\n              route.component ? (\r\n                <Route\r\n                  key={route.name}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={() => <route.component {...props} />}\r\n                />\r\n              ) : null\r\n            )}\r\n            <Redirect from='/' to='/home' />\r\n          </Switch>\r\n        </Container>\r\n      </Suspense>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n  }),\r\n};\r\n\r\nLayout.defaultProps = {\r\n  history: {\r\n    push: () => null,\r\n  },\r\n};\r\n\r\nexport default Layout;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { loadState } from './store/localStorage';\r\nimport configureStore, { history } from './store';\r\nimport { DefaultLayout } from './templates';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst store = configureStore(loadState());\r\n\r\nconst toast = () => (\r\n  <ToastContainer\r\n    position='top-right'\r\n    autoClose={5000}\r\n    hideProgressBar={false}\r\n    newestOnTop={false}\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route\r\n          path='/'\r\n          component={(props) => (\r\n            <DefaultLayout toasty={() => toast()} {...props} />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('_codingleo-session_');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    const parsedState = JSON.parse(serializedState);\r\n    /* Não reutilizar estados salvos a mais de 2 horas */\r\n    const sessionTime = 2 * 60 * 60 * 1000;\r\n    if (Date.now() - parsedState.time > sessionTime) {\r\n      return undefined;\r\n    }\r\n    return parsedState.value;\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify({ value: state, time: Date.now() });\r\n    localStorage.setItem('_codingleo-session_', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","export const COLORS = {\r\n  controls: {\r\n    close: '#FF605C',\r\n    minimize: '#FFBD44',\r\n    expand: '#00CA4E',\r\n  },\r\n  text: {\r\n    purple: '#C678DD',\r\n    red: '#E06C75',\r\n    green: '#98C379',\r\n    yellow: '#E5C07B',\r\n    blue: '#61afef',\r\n  },\r\n  background: '#1F2538',\r\n  textColor: '#E4EAF1',\r\n  terminal: {\r\n    header: 'rgba(240, 240, 240, 0.7)',\r\n    body: 'rgba(0, 0, 0, 0.7)',\r\n    bodyColorText: '#FFFFFF',\r\n    headerColorText: '#000000',\r\n  },\r\n  editor: {\r\n    document: '#2A304B',\r\n    body: '#232B40',\r\n    lineBackground: '#313957',\r\n    lineNumber: {\r\n      active: '#DCE0F2',\r\n      neutral: '#515B82',\r\n    },\r\n  },\r\n};\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { createReducer, createActions } from 'reduxsauce';\r\n\r\nexport const { Types, Creators } = createActions({\r\n  toggleLocale: [''],\r\n});\r\n\r\nconst initialState = {\r\n  locale: 'EN-US',\r\n};\r\n\r\nfunction toggleLocale(state) {\r\n  return {\r\n    ...state,\r\n    locale: state.locale === 'EN-US' ? 'PT-BR' : 'EN-US',\r\n  };\r\n}\r\n\r\nconst locale = {\r\n  [Types.TOGGLE_LOCALE]: toggleLocale,\r\n};\r\n\r\nexport default createReducer(initialState, locale);\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { createReducer, createActions } from 'reduxsauce';\r\n\r\nexport const { Types, Creators } = createActions({\r\n  setLine: ['data'],\r\n});\r\n\r\nconst initialState = {\r\n  line: 0,\r\n};\r\n\r\nfunction setLine(state, { data }) {\r\n  return {\r\n    ...state,\r\n    line: data,\r\n  };\r\n}\r\n\r\nconst node = {\r\n  [Types.SET_LINE]: setLine,\r\n};\r\n\r\nexport default createReducer(initialState, node);\r\n"],"sourceRoot":""}